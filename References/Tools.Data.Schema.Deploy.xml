<?xml version="1.0"?>
<doc>
<assembly>
<name>
Tools.Data.Schema.Deploy
</name>
</assembly>
<members>
<member name="F:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.DeleteScriptOnDispose">
	<summary>Indicates if deployment script will be deleted once this instance is disposed</summary>
	<remarks>Deployment script is deleted whn value of the <see cref="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.DeployScriptPath"/> was not provided externally</remarks>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Init(System.String,System.String,System.String)">
	<summary>Encapsulates CTor functionality</summary>
	<param name="connectionString">Connection string to Microsft SQL Server</param>
	<param name="databaseName">Name of target database to deploy to</param>
	<param name="manifestPath">Path to database deployment manifest (*.deploymanifest) file</param>
	<exception cref="!:ArgumentNullException"><paramref name="connectionString"/>, <paramref name="databaseName"/> or <paramref name="manifestPath"/> is null</exception>
	<exception cref="!:ArgumentException"><paramref name="connectionString"/>, <paramref name="databaseName"/> or <paramref name="manifestPath"/> is an empty string</exception>
	<remarks>The folder deployment manifets is located in must contain all other files required by deployment process.</remarks>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.#ctor(System.String,System.String,System.String)">
	<summary>CTor - creates a new instance of the <see cref="T:Tools.DataT.SchemaT.DeployT.DatabaseDeployment"/> class</summary>
	<param name="connectionString">Connection string to Microsft SQL Server</param>
	<param name="databaseName">Name of target database to deploy to</param>
	<param name="manifestPath">Path to database deployment manifest (*.deploymanifest) file</param>
	<exception cref="!:ArgumentNullException"><paramref name="connectionString"/>, <paramref name="databaseName"/> or <paramref name="manifestPath"/> is null</exception>
	<exception cref="!:ArgumentException"><paramref name="connectionString"/>, <paramref name="databaseName"/> or <paramref name="manifestPath"/> is an empty string</exception>
	<remarks>The folder deployment manifets is located in must contain all other files required by deployment process.</remarks>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.#ctor(System.String,System.String)">
	<summary>CTor - creates a new instance of the <see cref="T:Tools.DataT.SchemaT.DeployT.DatabaseDeployment"/> class. Name of target database if inferred from connection string.</summary>
	<param name="connectionString">Connection string to Microsoft SQL Server. Property <c>Initial Catalog</c> must contain name of database to deploy schema to</param>
	<param name="manifestPath">Path to database deployment manifest (*.deploymanifest) file</param>
	<exception cref="!:ArgumentNullException"><paramref name="connectionString"/> or <paramref name="manifestPath"/> is null</exception>
	<exception cref="!:ArgumentException"><paramref name="connectionString"/> or <paramref name="manifestPath"/> is an empty string -or- <paramref name="connectionString"/> is an invalid connection string. -or- Initial Catalog not not cpecified in <paramref name="connectionString"/>.</exception>
	<exception cref="!:KeyNotFoundException"><paramref name="connectionString"/> contains unrecognized option</exception>
	<exception cref="!:FormatException"><paramref name="connectionString"/> contains an invalid value (specifically when numeric or boolean value is expected but not specified)</exception>
	<remarks>The folder deployment manifets is located in must contain all other files required by deployment process.</remarks>
	<seelaso cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog"/>
</member><member name="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.ConnectionString">
	<summary>Gets a connection string used to connect to database</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.DatabaseName">
	<summary>Gets name of database to deploy schema to</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.ManifestPath">
	<summary>Gets path of database deployment manifest (*.deploymanifest) file</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Properties">
	<summary>Gest dictionary containing names and values of additional deployment properties</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.DeployToDatabase">
	<summary>Gets or sets value indicating if model is deployed to database or only deployment script is generated</summary>
	<value>True to deploy model to database, false to generate deployment script file only</value>
</member><member name="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.DeployScriptPath">
	<summary>Gets or sets path to save deploy script to</summary>
	<exception cref="!:ObjectDisposedException"><see cref="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Deployed"/> is true (this instance has already been used to deploy a database).</exception>
	<remarks>When not set before the <see cref="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Deploy"/> method is called, script is stored to a temporary directory and deleted when object is disposed.</remarks>
</member><member name="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Deployed">
	<summary>Contains value indicating deployment was already attempted or not</summary>
	<remarks>One instance of <see cref="T:Tools.DataT.SchemaT.DeployT.DatabaseDeployment"/> class can be used only to one attempt to deploy a database</remarks>
</member><member name="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Errors">
	<summary>Once deployment has started gets all collected errors, warnings and messages of deploy engine</summary>
	<exception cref="!:ObjectDisposedException">This instance has been already disposed</exception>
</member><member name="E:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.ErrorOccured">
	<summary>Raised when an eror occurs or a message is generated by deployment engine</summary>
	<remarks>
 When this event is faired it does not neccessarilly mean that error has occured. Check <see cref="P:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs.Error"/>.<see cref="P:Microsoft.Data.Schema.DataSchemaError.Severity">Severity</see>.
 <para>Throw any exception from handler of this event to immediatelly break excution.</para>
	</remarks>
	<seelaso cref="T:Microsoft.Data.Schema.DataSchemaError"/>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.OnErrorOccured(Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs)">
	<summary>Raises the <see cref="E:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.ErrorOccured"/> event</summary>
	<param name="e">Event argument</param>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Deploy">
	<summary>Deploys database schema to target database</summary>
	<exception cref="!:InvalidOperationException">This instance has already been used to attempt to deploy a database shcema -or-
 <paramref name="ManifestPath"/> does not exist -or-
 A property from the <see cref="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Properties"/> dictionary was not recognized</exception>
	<exception cref="T:Microsoft.Data.Schema.Build.DeploymentFailedException">An error ocuured while deploying schema to database</exception>
	<remarks>The <see cref="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Deploy"/> method can be called only once for each instance of the <see cref="T:Tools.DataT.SchemaT.DeployT.DatabaseDeployment"/> class</remarks>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.LoadExtensionManagerFromDBSchema(System.IO.FileInfo)">
	<summary>Loads an extension managed from a database schema</summary>
	<param name="input"><see cref="!:IO.FileInfo"/> representing file containing the database schema</param>
	<returns>An <see cref="T:Microsoft.Data.Schema.Extensibility.ExtensionManager"/> containing extensions loaded from the schema</returns>
	<exception cref="T:Microsoft.Data.Schema.Build.DeploymentFailedException">Model cannot be loaded or exceptions cannot be loaded from the model -or- Database scjema provider foes not support current version of schema</exception>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.LoadManifest(System.IO.FileInfo)">
	<summary>Loads a deployment manifest from file</summary>
	<param name="manifestFile">A <see cref="!:IO.FileInfo"/> representing file to load manifest from</param>
	<returns>Manifest loaded as MSBuild project</returns>
	<exception cref="T:Microsoft.Data.Schema.Build.DeploymentFailedException">Failed to load a manifest</exception>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.GetCmdServices(Microsoft.Data.Schema.Extensibility.ExtensionManager,System.String)">
	<summary>Gets VSDBCMD services from extention manager</summary>
	<param name="em">An extension manager</param>
	<param name="connectionString">Connection string to database</param>
	<remarks>VSDBCMD services obtained from <paramref name="em"/></remarks>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.GetCmdServices(Microsoft.Data.Schema.Extensibility.ExtensionManager)">
	<summary>Gets VSDBCMD services from extention manager</summary>
	<param name="em">An extension manager</param>
	<remarks>VSDBCMD services obtained from <paramref name="em"/></remarks>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.FormatDataSchemaError(Microsoft.Data.Schema.DataSchemaError)">
	<summary>Formats <see cref="T:Microsoft.Data.Schema.DataSchemaError"/> to string</summary>
	<param name="error">An error to be formated</param>
	<returns>String representation of <paramref name="error"/></returns>
	<remarks>This is utillity method that can be used to present error messages to user in unified way</remarks>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.GetErrorLog">
	<summary>Gets error log as string</summary>
	<returns>Combined error messages form the <see cref="P:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Errors"/> collection formatted using <see cref="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.FormatDataSchemaError(Microsoft.Data.Schema.DataSchemaError)"/>.</returns>
	<exception cref="!:ObjectDisposedException">This instance has been already disposed</exception>
</member><member name="F:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.disposedValue">
	<summary>To detect redundant calls</summary>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Dispose(System.Boolean)">
	<summary>Implements <see cref="!:IDisposable.Dispose"/></summary>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Finalize">
	<summary>Allows an <see cref="T:System.Object"/> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Object"/> is reclaimed by garbage collection.</summary>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.Dispose">
	<summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
</member><member name="T:Tools.DataT.SchemaT.DeployT.DatabaseDeployment">
	<summary>Encapsulates functionality of programatic deployment of database schema to MIcrosft SQL Server database</summary>
	<version version="1.5.3" stage="Nightly">This class is new in version 1.5.3</version>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs.#ctor(Microsoft.Data.Schema.DataSchemaError)">
	<summary>CTor</summary>
	<param name="error">An arrot ahich has occured</param>
	<exception cref="!:ArgumentNullException"><paramref name="error"/> is null</exception>
</member><member name="P:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs.Error">
	<summary>Gets error which has occured</summary>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs.op_Implicit(Microsoft.Data.Schema.DataSchemaError)~Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs">
	<summary>Converst instance of the <see cref="T:Microsoft.Data.Schema.DataSchemaError"/> class to <see cref="T:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs"/></summary>
	<param name="a">A <see cref="T:Microsoft.Data.Schema.DataSchemaError"/></param>
	<returns>A new instance of the <see cref="T:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs"/> class with <see cref="P:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs.Error"/> initialized to <paramref name="a"/>. Null when <paramref name="a"/> is null.</returns>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs.op_Implicit(Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs)~Microsoft.Data.Schema.DataSchemaError">
	<summary>Converst instance of the <see cref="T:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs"/> class to <see cref="T:Microsoft.Data.Schema.DataSchemaError"/></summary>
	<param name="a">A <see cref="T:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs"/></param>
	<returns><paramref name="a"/>.<see cref="P:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs.Error">Error</see>. Null when <paramref name="a"/> is null.</returns>
</member><member name="M:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs.ToString">
	<summary>Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.</summary>
	<returns><see cref="P:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs.Error"/>.<see cref="P:Microsoft.Data.Schema.DataSchemaError.Message">Message</see></returns>
</member><member name="T:Tools.DataT.SchemaT.DeployT.DataSchemaErrorEventArgs">
	<summary>Event argumens of the <see cref="E:Tools.DataT.SchemaT.DeployT.DatabaseDeployment.ErrorOccured"/> event</summary>
	<version version="1.5.3" stage="Nightly">This class is new in version 1.5.3</version>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.err_CannotBeEmptyString">
	<summary>
  Looks up a localized string similar to {0} cannot be an empty string.
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.err_CannotChangeValueOnceDeployed">
	<summary>
  Looks up a localized string similar to Value of the {0} property cannot be changed once deployment attempt has been done..
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.err_DatabaseSchemaFileDoesNotExist">
	<summary>
  Looks up a localized string similar to The database schema file {0} does not exist.
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.err_Deploy">
	<summary>
  Looks up a localized string similar to An error occured while deploying the database..
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.err_FailedSetProperties">
	<summary>
  Looks up a localized string similar to Failed to set some properties - {0}.
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.err_ManifestFileNotFound">
	<summary>
  Looks up a localized string similar to Manifest file not found.
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.err_ObjectDisposed">
	<summary>
  Looks up a localized string similar to This object has already been disposed.
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.err_ProviderVsSchemaVersionConflict">
	<summary>
  Looks up a localized string similar to Database schema provider {0} does not support schema file version '{1}'..
</summary>
</member><member name="P:Tools.DataT.SchemaT.DeployT.My.Resources.Resources.err_UsedInstanceUsedAgain">
	<summary>
  Looks up a localized string similar to This instance has already been used to deploy a database..
</summary>
</member><member name="T:Tools.DataT.SchemaT.DeployT.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>